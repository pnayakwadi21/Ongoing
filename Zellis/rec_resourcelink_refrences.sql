USE [H21_STAGING]
GO

/****** Object:  StoredProcedure [dbo].[GET_RESOURCELINK_EMPLOYEE_DATA]    Script Date: 29/04/2022 10:45:41 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE  PROCEDURE [dbo].[GET_RESOURCELINK_EMPLOYEE_DATA] AS 

/*
===========================================================================================================
Description
-----------
MODULE RETRIEVES DATA FROM RESOURCE LINK TABLES FOR UPLOAD TO ACTIVE DIRECTORY   - SYS AID CALL #156451  

AMENDMENT HISTORY
-----------------

DATE		BY					DESCRIPTION
----		---					-----------
18/05/2015	SANJEEV SUMMAN		INITIAL VERSION
14/10/2015	SANJEEV SUMMAN		RENAMED COLUMNS, ADDED POST NUMBERS FOR JOE NEILSON, CLEANSED MANAGER JOB TITLE
22/12/2015	SANJEEV SUMMAN		CHANGED THE LOGIC TO USE RAW_D228M INSTEAD OF RAW_D228VEM, CHANGED THE LOGIC 
								THAT RETRIEVES THE LATEST MANAGER POST, JOINED THE RESOURCE LINK DATA TO THE 
								ACTIVE DIRECTORY DATA IN ORDER TO RETURN THE AD USER NAME FOR BOTH EMPLOYEE 
								AND MANAGER
09/02/2016	SANJEEV SUMMAN		JOINED TO RAW_D970M TO GET AD USERNAME, ADDED EMPLOYEE POST END DATE, 
								REMOVED "DIRTY JOB TITLES" FROM SELECT LIST, ADDED EMPLOYEE / MANAGER WORK 
								TELEPHONE NUMBER, NOW INCLUDING ALL AD ACCOUNTS REGARDLESS OF WHETHER THEY 
								ARE DISABLED OR NOT, COALESCE FORENAMES WITH KNOWN AS FIELD FOR MANAGER AND 
								EMPLOYEE, REMOVED END DATE RESTRICTIONS IN WHERE CLAUSE AND JOIN TO RAW_D580M,
								ADDED RANKING ORDER TO COALESCED POST END DATE AS REQUESTED BY J.RICHES
17/02/2016	SANJEEV SUMMAN		ADDED A SECONDARY JOIN TO D550M IN ORDER TO GET THE EMPLOYEE END DATE
08/03/2016	SANJEEV SUMMAN		ADDED AD_EMPLOYEE.USER_MOBILE_TELEPHONE_NUMBER AND 
								AD_MANAGER.USER_MOBILE_TELEPHONE_NUMBER TO SELECT LIST

24/03/2017	SANJEEV SUMMAN		CAST THE EMPLOYEE NUMBER AS VARCHAR FROM DBO.REC_UNIVERSE_AD_VIEW BECAUSE AN 
								IMPLICIT CAST TO NVARCHAR WAS HAPPENING IN THE JOIN TO THE RL TABLE
24/03/2017	SANJEEV SUMMAN		INDEXED JOIN PREDICATES TO IMPROVE QUERY PERFORMANCE
24/03/2017	SANJEEV SUMMAN		EXCLUDE ADMIN ACCOUNTS FROM ACTIVE DIRECTORY SET
24/03/2017	SANJEEV SUMMAN		ADDED EMPLOYEE START DATE AND MADE CLEAR DISTINCTION BETWEEN IT AND THE 
								EMPLOYEE POST START DATE
01/12/2017	James Stephens		Removed DROP TABLE dbo.REC_RESOURCELINK_ACTIVE_DIRECTORY statement
								due to it also dropping explicit permissions on the table, changed 
								SELECT INTO statement to an INSERT SELECT. This also helps with tracking 
								object dependencies. Removed SET DATEFORMAT YMD. #
30/05/2018  Praveen Nayakwadi	Added HIERAR_USERPOST_LEVEL  as new field to REC_RESOURCELINK_ACTIVE_DIRECTORY

25/07/2018  Praveen Nayakwadi	Change #108627  Hierar_UserPost is made conditional 'for Corporate Business Streams to bring the relevant  Post Level
								below level 7  and for Non Corporate to bring the relevant post level from  level8 and below  Note:this field is created to be used for Fred to work with AD

26/07/2018   Praveen Nayakwadi  Change #108627  Column rename from [HIERAR_USERPOST_LEVEL]  to [Fred_Org]
22/10/2018   Praveen Nayakwadi  Change 115247 Restricted d455v to Pers Hierarchy,Included employees due to start in a week
07/11/2018   Praveen Nayakwadi  Change 117077  Added Post Asset Type to indicate whether the employee in the post should have an AD account. This will then be used to auto-create users
26/11/2018   Praveen Nayakwadi  Change 117583  Adding new field 'Known as' field for this change (CR) has been changed  and EMPLOYEE_FIRST_NAME population has been changed to take Employee_fore_Name where Known as field is either blank or NULL
26/11/2018   Praveen Nayakwadi  Change 118004  Change EMPLOYEE_POST_START_DATE/EMPLOYEE_START_DATE is from  '<getdate() +7'   to '<getdate() +14'  , so that it includes employees that are due to start in 2 weeks rather than 1
10/01/2019	 Praveen Nayakwadi  Incident 120959   CR 120976  Included managers who have future end date 
25/01/2019	 Praveen Nayakwadi  CR 121,921   Include Employee posts  who have future start date
12/08/2019	 Praveen Nayakwadi	Exclude Ad employees 'disabled accounts' for employees accounts   who have both 'enabled and disabled accounts'
19/08/2019	 Praveen Nayakwadi	Exclude( Ad employees with Manager Posts  'disabled Ad accounts')  who have disabled and enabled accounts
06/09/2019	 Praveen Nayakwadi	Post Rank Order  business rule changed  to Main post = 1
								Next, current posts in order of start date, most recent first
								Then, former posts in order of end date, most recent first
12/02/2019	Praveen Nayakwadi	Added Indexes to temp tables.
18/06/2020	James Stephens		Coalesced DEPARTMENT and TEAM columns - SR 184396
===========================================================================================================
*/

IF EXISTS (
    SELECT 1 exist
    FROM sys.indexes 
    WHERE object_id = OBJECT_ID('#ACTIVE_DIRECTORY_DATA')
    AND name='NCIX_AD_EmpNo')

DROP INDEX 	NCIX_AD_EmpNo ON #ACTIVE_DIRECTORY_DATA


IF EXISTS (
    SELECT 1 exist
    FROM sys.indexes 
    WHERE object_id = OBJECT_ID('#LATEST_MANAGER_POST')
    AND name='NCIX_ManagerPost')

DROP INDEX 	NCIX_ManagerPost ON  #LATEST_MANAGER_POST





-----NCIX_ManagerPost



IF EXISTS (SELECT  * FROM TEMPDB.DBO.SYSOBJECTS O WHERE O.XTYPE IN ('U') AND O.ID = OBJECT_ID(N'TEMPDB..#ACTIVE_DIRECTORY_DATA'))
DROP TABLE #ACTIVE_DIRECTORY_DATA;
IF EXISTS (SELECT  * FROM TEMPDB.DBO.SYSOBJECTS O WHERE O.XTYPE IN ('U') AND O.ID = OBJECT_ID(N'TEMPDB..#ACTIVE_DIRECTORY_DATA_AD'))
DROP TABLE #ACTIVE_DIRECTORY_DATA_AD;

SELECT * INTO #ACTIVE_DIRECTORY_DATA_AD FROM (SELECT CAST(EMPLOYEE_NUMBER AS VARCHAR(10)) AS EMPLOYEE_NUMBER , [USER_NAME], USER_TELEPHONE_NUMBER,USER_MOBILE_TELEPHONE_NUMBER, USER_EMAIL_ADDRESS,ACCOUNT_DISABLED 
FROM DBO.REC_UNIVERSE_AD_VIEW WHERE [USER_NAME] NOT LIKE 'ADM_%') ALIAS

--Exclude Ad employees 'disabled accounts' for employees accounts   who have both 'enabled and disabled accounts'

SELECT r.EMPLOYEE_NUMBER,
       r.USER_NAME,
       r.USER_TELEPHONE_NUMBER,
       r.USER_MOBILE_TELEPHONE_NUMBER,
       r.USER_EMAIL_ADDRESS,
       r.ACCOUNT_DISABLED,
       r.Emp_Enable_Ord INTO #ACTIVE_DIRECTORY_DATA  FROM
(
SELECT EMPLOYEE_NUMBER,
       USER_NAME,
       USER_TELEPHONE_NUMBER,
       USER_MOBILE_TELEPHONE_NUMBER,
       USER_EMAIL_ADDRESS,
       ACCOUNT_DISABLED,ROW_NUMBER() OVER (PARTITION BY EMPLOYEE_NUMBER ORDER BY ACCOUNT_DISABLED) Emp_Enable_Ord   FROM #ACTIVE_DIRECTORY_DATA_AD
) r



CREATE NONCLUSTERED INDEX NCIX_AD_EmpNo ON #ACTIVE_DIRECTORY_DATA(EMPLOYEE_NUMBER) INCLUDE (USER_NAME,USER_TELEPHONE_NUMBER,USER_MOBILE_TELEPHONE_NUMBER,USER_EMAIL_ADDRESS,ACCOUNT_DISABLED,Emp_Enable_Ord)




IF EXISTS (SELECT  * FROM TEMPDB.DBO.SYSOBJECTS O WHERE O.XTYPE IN ('U') AND O.ID = OBJECT_ID(N'TEMPDB..#LATEST_MANAGER_POST'))
DROP TABLE #LATEST_MANAGER_POST;

SELECT * INTO #LATEST_MANAGER_POST FROM (
SELECT 
  MAX(PERSON_REF)		AS MAX_MANAGER_PERSON_REF,
  REF					AS MANAGER_POST_REF, 
  MAX(START_DATE)		AS MAX_START_DATE
FROM 
  DBO.RAW_D580M 
WHERE 
	[START_DATE] <= DATEADD(DD,0,DATEDIFF(DD,0,GETDATE()))
	AND ( END_DATE IS NULL  OR END_DATE>=GETDATE())
	AND MAIN_FLAG = 'Y'
GROUP BY  
  REF

) ALIAS


CREATE NONCLUSTERED INDEX NCIX_ManagerPost ON #LATEST_MANAGER_POST(MANAGER_POST_REF) INCLUDE(MAX_MANAGER_PERSON_REF,MAX_START_DATE)



IF OBJECT_ID(N'dbo.REC_RESOURCELINK_ACTIVE_DIRECTORY',N'U') IS NOT NULL
BEGIN
	
	TRUNCATE TABLE dbo.REC_RESOURCELINK_ACTIVE_DIRECTORY;

	INSERT INTO dbo.REC_RESOURCELINK_ACTIVE_DIRECTORY
	
	SELECT 
	    DISTINCT
	    EMPLOYEE_DETAILS.PERSON_REF                     AS EMPLOYEE_PERSON_REFERENCE,
	    PERSONNEL_HIERARCHY.EMPLOYEE_NUMBER             AS EMPLOYEE_EMPLOYEE_NUMBER,
	    EMPLOYEE_DETAILS.TITLE                          AS EMPLOYEE_TITLE,
		COALESCE(NULLIF(EMPLOYEE_DETAILS.KNOWN_AS,''),EMPLOYEE_DETAILS.FIRST_FORNAME)  AS EMPLOYEE_FIRST_NAME,
	    EMPLOYEE_DETAILS.SURNAME                        AS EMPLOYEE_LAST_NAME,
		AD_EMPLOYEE.[USER_NAME]							AS EMPLOYEE_USER_NAME,
		EMPLOYEE_AD_USERNAME.DATA_VALUE                 AS EMPLOYEE_AD_USERNAME_RL,
		AD_EMPLOYEE.USER_TELEPHONE_NUMBER				AS EMPLOYEE_TELEPHONE_NUMBER,
		AD_EMPLOYEE.USER_MOBILE_TELEPHONE_NUMBER		AS EMPLOYEE_MOBILE_TELEPHONE_NUMBER,	
		AD_EMPLOYEE.USER_EMAIL_ADDRESS					AS EMPLOYEE_EMAIL_ADDRESS,
		POST_TO_POST.POST_REF1                          AS EMPLOYEE_POST_REFERENCE,
	    EMP_POST_DESC.NUMBER_R                          AS EMPLOYEE_POST_NUMBER,
	    EMPLOYEE_POST.[START_DATE]                      AS EMPLOYEE_POST_START_DATE,
		COALESCE(EMPLOYEE_POST.END_DATE,CAST('9999-12-31T23:59:59' AS DATETIME)) AS EMPLOYEE_POST_END_DATE,
		EMPLOYEE.[START_DATE]							AS EMPLOYEE_START_DATE,
		COALESCE(EMPLOYEE.END_DATE ,CAST('9999-12-31T23:59:59' AS DATETIME)) AS EMPLOYEE_END_DATE,
		---RANK() OVER (PARTITION BY PERSONNEL_HIERARCHY.EMPLOYEE_NUMBER ORDER BY COALESCE(EMPLOYEE_POST.END_DATE,CAST('9999-12-31T23:59:59' AS DATETIME)) DESC) AS POST_RANK_ORDER,



		
		COALESCE(
CASE	WHEN EMPLOYEE_POST.PERSON_REF 
IN
				(
				SELECT DISTINCT EMPLOYEE_POSTt.PERSON_REF  FROM RAW_D580M EMPLOYEE_POSTt
				WHERE EMPLOYEE_POStT.END_DATE  IS NOT  NULL
				---GROUP BY EMPLOYEE_POST.PERSON_REF 

				EXCEPT

				SELECT DISTINCT EMPLOYEE_POSTt.PERSON_REF  FROM RAW_D580M EMPLOYEE_POSTt
				WHERE  EMPLOYEE_POSTt.END_DATE  IS  NULL
				---GROUP by EMPLOYEE_POST.PERSON_REF 
				) 

                  THEN  RANK() OVER (PARTITION BY EMPLOYEE_POST.PERSON_REF  ORDER BY EMPLOYEE_POST.END_DATE DESC)
                   ELSE NULL
                   END  -------Get the  rank for former employees with the order by latest leaving date 
,
RANK() OVER(PARTITION  BY  EMPLOYEE_POST.PERSON_REF  ORDER BY

				CASE 
				WHEN MAIN_FLAG='Y' AND COALESCE(EMPLOYEE_POST.END_DATE ,'2099/01/01')>GETDATE() THEN 1  
        
						 WHEN  MAIN_FLAG='N' AND COALESCE(EMPLOYEE_POST.END_DATE ,'2099/01/01')>GETDATE() THEN 2
							 ELSE 
								3
								END,EMPLOYEE_POST.start_date DESC ,EMPLOYEE_POST.END_DATE DESC)
								 ) POST_RANK_ORDER,  -------Get the  rank for current employees (priority for active posts )



	    CASE
			WHEN 
				CHARINDEX ('ZERO',EMP_POST_DESC.LONG_DESC) > 0	THEN	SUBSTRING(EMP_POST_DESC.LONG_DESC,0 , CHARINDEX ('ZERO',EMP_POST_DESC.LONG_DESC)-3)
			WHEN 
				CHARINDEX ('GTD',EMP_POST_DESC.LONG_DESC) > 0	THEN	SUBSTRING(EMP_POST_DESC.LONG_DESC,0 , CHARINDEX ('GTD',EMP_POST_DESC.LONG_DESC)-3)
			ELSE 
				EMP_POST_DESC.LONG_DESC
		END												AS EMPLOYEE_CLEAN_JOB_TITLE,
		LOCATION_DETAILS.LOCATION_NUMBER                AS LOCATION_NUMBER,
	    LOCATION_DETAILS.SHORT_DESC                     AS LOCATION_SHORT_DESCRIPTION,
	    LOCATION_DETAILS.LONG_DESC                      AS LOCATION_DESCRIPTION,
	    [ADDRESS].LINE_ONE	                            AS ADDRESS_LINE_ONE,
		[ADDRESS].LINE_TWO		                        AS ADDRESS_LINE_TWO,
		[ADDRESS].LINE_THREE	                        AS ADDRESS_LINE_THREE,
		[ADDRESS].LINE_FOUR		                        AS ADDRESS_LINE_FOUR,    
		[ADDRESS].POSTCODE		                        AS POST_CODE,
		COALESCE(PERSONNEL_HIERARCHY.STR_LONG_DESC4, 
				 PERSONNEL_HIERARCHY.STR_LONG_DESC3, 
				 PERSONNEL_HIERARCHY.STR_LONG_DESC2, 
				 PERSONNEL_HIERARCHY.STR_LONG_DESC1)	AS [DEPARTMENT],
		CASE WHEN PERSONNEL_HIERARCHY.STR_LONG_DESC4 ='corporate' THEN COALESCE(PERSONNEL_HIERARCHY.STR_LONG_DESC6, 
																				PERSONNEL_HIERARCHY.STR_LONG_DESC5, 
																				PERSONNEL_HIERARCHY.STR_LONG_DESC4, 
																				PERSONNEL_HIERARCHY.STR_LONG_DESC3, 
																				PERSONNEL_HIERARCHY.STR_LONG_DESC2, 
																				PERSONNEL_HIERARCHY.STR_LONG_DESC1)
		ELSE COALESCE(PERSONNEL_HIERARCHY.STR_LONG_DESC5, 
					  PERSONNEL_HIERARCHY.STR_LONG_DESC4, 
					  PERSONNEL_HIERARCHY.STR_LONG_DESC3, 
					  PERSONNEL_HIERARCHY.STR_LONG_DESC2, 
					  PERSONNEL_HIERARCHY.STR_LONG_DESC1) 
		END												AS [TEAM],

	    POST_TO_POST.POST_REF2                          AS MANAGER_POST_REFERENCE,
	    MAN_POST_DESC.NUMBER_R                          AS MANAGER_POST_NUMBER,
		MANAGER.PERSON_REF                              AS MANAGER_PERSON_REFERENCE,
		COALESCE(MANAGER_DETAILS.KNOWN_AS,MANAGER_DETAILS.FIRST_FORNAME)  AS MANAGER_FIRST_NAME,
		MANAGER_DETAILS.SURNAME                         AS MANAGER_LAST_NAME,
		AD_MANAGER.USER_NAME							AS MANAGER_USER_NAME,
		MANAGER_AD_USERNAME.DATA_VALUE                  AS MANAGER_AD_USERNAME_RL,
		AD_MANAGER.USER_TELEPHONE_NUMBER				AS MANAGER_TELEPHONE_NUMBER,
		AD_MANAGER.USER_MOBILE_TELEPHONE_NUMBER			AS MANAGER_MOBILE_TELEPHONE_NUMBER,
		AD_MANAGER.USER_EMAIL_ADDRESS					AS MANAGER_EMAIL_ADDRESS,
	    MANAGER.EMPLOYEE_NUMBER                         AS MANAGER_EMPLOYEE_NUMBER,
		CASE
				WHEN 
					CHARINDEX ('ZERO',MAN_POST_DESC.LONG_DESC) > 0	THEN	SUBSTRING(MAN_POST_DESC.LONG_DESC,0 , CHARINDEX ('ZERO',MAN_POST_DESC.LONG_DESC)-3)
				WHEN 
					CHARINDEX ('GTD',MAN_POST_DESC.LONG_DESC) > 0	THEN	SUBSTRING(MAN_POST_DESC.LONG_DESC,0 , CHARINDEX ('GTD',MAN_POST_DESC.LONG_DESC)-3)
				ELSE 
					MAN_POST_DESC.LONG_DESC
		END												AS MANAGER_CLEAN_JOB_TITLE,
		GETDATE()										AS CREATED_DATE
	    ,
		
CASE 
                    WHEN [STR_LONG_DESC4] ='corporate' THEN COALESCE([STR_LONG_DESC6],[STR_LONG_DESC5],[STR_LONG_DESC4],[STR_LONG_DESC3],[STR_LONG_DESC2],[STR_LONG_DESC1])
                    ELSE COALESCE([STR_LONG_DESC8],[STR_LONG_DESC7],[STR_LONG_DESC6],[STR_LONG_DESC5],[STR_LONG_DESC4],[STR_LONG_DESC3],[STR_LONG_DESC2],[STR_LONG_DESC1]) 
                    END AS [FRED_ORG]
					,

COALESCE(Post_Asset_AD.POST_ASSET_TYPE,'')   POST_ASSET_TYPE

	
	FROM 
							DBO.RAW_D500M				EMPLOYEE_DETAILS
	  INNER JOIN			DBO.RAW_D580M				EMPLOYEE_POST							ON (EMPLOYEE_POST.PERSON_REF = EMPLOYEE_DETAILS.PERSON_REF AND (EMPLOYEE_POST.MAIN_FLAG = 'Y' OR EMPLOYEE_POST.START_DATE>=GETDATE())/*AND EMPLOYEE_POST.END_DATE IS NULL*/) 
	  INNER JOIN			DBO.RAW_D228M				POST_TO_POST							ON (POST_TO_POST.POST_REF1 = EMPLOYEE_POST.REF AND POST_TO_POST.POST_RELATIONSHIP = 'R'  AND POST_TO_POST.HIERARCHY_EFF_COMPDATE = (SELECT MIN (D116M.EFF_COMPDATE)  FROM DBO.RAW_D116M D116M WHERE D116M.ID = POST_TO_POST.HIERARCHY_ID AND D116M.EFF_DATE <= DATEADD(DD,0,DATEDIFF(DD,0,GETDATE()))))
	  LEFT OUTER JOIN		#LATEST_MANAGER_POST		MANAGER_POST							ON (MANAGER_POST.MANAGER_POST_REF = POST_TO_POST.POST_REF2)
	  LEFT OUTER JOIN		DBO.RAW_D550M				MANAGER									ON (MANAGER.PERSON_REF = MANAGER_POST.MAX_MANAGER_PERSON_REF)
	  LEFT OUTER JOIN		DBO.RAW_D550M				EMPLOYEE								ON (EMPLOYEE.PERSON_REF = EMPLOYEE_POST.PERSON_REF)
	  LEFT OUTER JOIN		DBO.RAW_D500M				MANAGER_DETAILS							ON (MANAGER.PERSON_REF = MANAGER_DETAILS.PERSON_REF) 
	  LEFT OUTER JOIN		DBO.RAW_D200M				MAN_POST_DESC							ON (POST_TO_POST.POST_REF2 = MAN_POST_DESC.REF)
	  INNER JOIN			DBO.RAW_D200M				EMP_POST_DESC							ON (POST_TO_POST.POST_REF1 = EMP_POST_DESC.REF)
	  LEFT OUTER JOIN		DBO.RAW_D581M				EMPLOYEE_POST_HOLDING_LOCATION		    ON (EMPLOYEE_DETAILS.PERSON_REF = EMPLOYEE_POST_HOLDING_LOCATION.PERSON_REF AND EMPLOYEE_POST_HOLDING_LOCATION.EMP_POST_REF = EMPLOYEE_POST.REF AND EMPLOYEE_POST_HOLDING_LOCATION.END_DATE IS NULL)
	  LEFT OUTER JOIN		DBO.RAW_D850M				LOCATION_DETAILS						ON (EMPLOYEE_POST_HOLDING_LOCATION.REF  = LOCATION_DETAILS.LOCATION_REF AND LOCATION_DETAILS.OBS_DATE IS NULL)
	  LEFT OUTER JOIN		DBO.RAW_D910M				[ADDRESS]								ON (LOCATION_DETAILS.ADDRESS_REF = [ADDRESS].REF) 
	  LEFT OUTER JOIN		DBO.RAW_D455V				PERSONNEL_HIERARCHY						ON (EMP_POST_DESC.NUMBER_R = PERSONNEL_HIERARCHY.POST_NUMBER AND PERSONNEL_HIERARCHY.PERSON_REF = EMPLOYEE_DETAILS.PERSON_REF /*AND PERSONNEL_HIERARCHY.POST_END_DATE IS NULL*/) 
	  LEFT OUTER JOIN		#ACTIVE_DIRECTORY_DATA		AD_EMPLOYEE								ON (PERSONNEL_HIERARCHY.EMPLOYEE_NUMBER = AD_EMPLOYEE.EMPLOYEE_NUMBER)
	  LEFT OUTER JOIN		#ACTIVE_DIRECTORY_DATA		AD_MANAGER								ON (MANAGER.EMPLOYEE_NUMBER = AD_MANAGER.EMPLOYEE_NUMBER)
	  LEFT OUTER JOIN		DBO.RAW_D970M				EMPLOYEE_AD_USERNAME					ON (EMPLOYEE_DETAILS.PERSON_REF = EMPLOYEE_AD_USERNAME.DATA_KEY_ID AND EMPLOYEE_AD_USERNAME.FIELD_REF = '01000140' AND EMPLOYEE_AD_USERNAME.SCREEN_REF = 'MD55S3')
	  LEFT OUTER JOIN		DBO.RAW_D970M				MANAGER_AD_USERNAME						ON (MANAGER_DETAILS.PERSON_REF = MANAGER_AD_USERNAME.DATA_KEY_ID AND MANAGER_AD_USERNAME.FIELD_REF = '01000140' AND MANAGER_AD_USERNAME.SCREEN_REF = 'MD55S3')
	 LEFT OUTER JOIN      (SELECT POST_REF,POST_ASSET_TYPE FROM  DBO.RAW_D2721M 
	                       GROUP BY POST_REF,POST_ASSET_TYPE) Post_Asset_AD                     ON Post_Asset_AD.POST_REF=POST_TO_POST.POST_REF1 
	
	 WHERE 		
			--EMPLOYEE_POST.START_DATE <= DATEADD(DD,0,DATEDIFF(DD,0,GETDATE()))
			EMPLOYEE_POST.START_DATE <= DATEADD(DD,14,DATEDIFF(DD,0,GETDATE()))
				AND PERSONNEL_HIERARCHY.HIERARCHY_ID='Pers'
			AND (AD_EMPLOYEE.Emp_Enable_Ord=1 OR AD_EMPLOYEE.Emp_Enable_Ord IS  NULL)
			AND (AD_Manager.Emp_Enable_Ord=1 OR AD_Manager.Emp_Enable_Ord IS  NULL)
			; 
END








--GO


GO


